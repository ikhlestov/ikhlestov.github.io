<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Illarion's Notes</title><link>https://ikhlestov.github.io/</link><description>Notes about AI, machine learning, computer vision and programming.</description><atom:link href="https://ikhlestov.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Thu, 07 Feb 2019 21:56:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>RBM based Autoencoders with tensorflow</title><link>https://ikhlestov.github.io/posts/rbm-based-autoencoders-with-tensorflow/</link><dc:creator>Illarion Khlestov</dc:creator><description>&lt;div&gt;&lt;p&gt;Recently I try to implement RBM based autoencoder in tensorflow similar to RBMs described in &lt;a class="reference external" href="http://www.cs.utoronto.ca/~rsalakhu/papers/semantic_final.pdf"&gt;Semantic Hashing&lt;/a&gt; paper by Ruslan Salakhutdinov and Geoffrey Hinton. It seems that with weights that were pre-trained with RBM autoencoders should converge faster. So I've decided to check this.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://ikhlestov.github.io/posts/rbm-based-autoencoders-with-tensorflow/"&gt;Read moreâ€¦&lt;/a&gt; (6 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://ikhlestov.github.io/posts/rbm-based-autoencoders-with-tensorflow/</guid><pubDate>Wed, 28 Dec 2016 20:33:15 GMT</pubDate></item></channel></rss>